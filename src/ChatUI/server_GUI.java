/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ChatUI;

import ChatServer.ChatApplication;
import ChatServer.ServerConfiguration;
import ClientMessageHandler.IClientMessageObserver;
import java.io.IOException;

/**
 * Server GUI, implements IClientMessageObserver to handle client messages
 */
public class server_GUI extends javax.swing.JFrame implements IClientMessageObserver {
    private ChatApplication _chatApplication;
    private Thread _chatApplicationThread;
    private boolean _is_started;

    /**
     * Creates new form server_GUI
     */
    public server_GUI() {
        _chatApplication = new ChatApplication(ServerConfiguration.SERVER_PORT, this);
        _is_started = false;
        _chatApplicationThread = new Thread(_chatApplication);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        startBtn = new javax.swing.JToggleButton();
        textBox = new java.awt.TextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        startBtn.setText("start");
        startBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(textBox, javax.swing.GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(startBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(startBtn)
                .addGap(2, 2, 2)
                .addComponent(textBox, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void startBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startBtnActionPerformed
        if (!_is_started) {
            _chatApplicationThread.start();
            
            _is_started = true;
            startBtn.setText("Stop");
            textBox.append("Server started on port " + ServerConfiguration.SERVER_PORT + "\r\n");
        } else {
            try {
                _chatApplication.Stop();
                _chatApplicationThread.interrupt();
                
                // Reset the thread for a new start if needed
                _chatApplicationThread = new Thread(_chatApplication);
                
                _is_started = false;
                startBtn.setText("Start");
                textBox.append("Server stopped\r\n");
            } catch(IOException ex) {
                textBox.append("Failed to stop server with error " + ex + "\r\n");
            }
        }
    }//GEN-LAST:event_startBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(server_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(server_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(server_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(server_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new server_GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton startBtn;
    private java.awt.TextArea textBox;
    // End of variables declaration//GEN-END:variables

    @Override
    public void OnUserConnected(String username) {
        textBox.append(String.format(ServerConfiguration.CONNECT_MESSAGE_FORMAT, username));
    }

    @Override
    public void OnUserDisconnected(String username) {
        textBox.append(String.format(ServerConfiguration.DISCONNECT_MESSAGE_FORMAT, username));
    }

    @Override
    public void OnUserAskForOnlineList(String username) {
        textBox.append(String.format(ServerConfiguration.GETONLINE_MESSAGE_FORMAT, username));
    }

    @Override
    public void OnUserSendMessageToAll(String username, String message) {
        textBox.append(String.format(ServerConfiguration.SEND_TO_ALL_MESSAGE_FORMAT, username, message));
    }

    @Override
    public void OnUserSendMessage(String username, String target, String message) {
        textBox.append(String.format(ServerConfiguration.SEND_TO_MESSAGE_FORMAT, username, target, message));
    }
}
