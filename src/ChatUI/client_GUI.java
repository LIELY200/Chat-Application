/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ChatUI;

import ChatClient.ClientChatApplication;
import ChatClient.ClientConfiguration;
import ServerMessageHandler.IServerMessageObserver;
import java.io.IOException;

/**
 * Client GUI class, implemets IServerMessageObserver to handle server messages
 */
public class client_GUI extends javax.swing.JFrame implements IServerMessageObserver{
    
    private String _server;
    private ClientChatApplication _chatApplication;
    private boolean _is_connected;
    
    /**
     * Creates new form client_GUI
     */
    public client_GUI() {
        _is_connected = false;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        connect = new javax.swing.JButton();
        show_online = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        messageTextBox = new javax.swing.JTextArea();
        send = new javax.swing.JButton();
        textBox = new java.awt.TextArea();
        userNameTxtField = new javax.swing.JTextField();
        AdressTextField = new javax.swing.JTextField();
        targenUserTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        connect.setText("connect");
        connect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connectActionPerformed(evt);
            }
        });

        show_online.setText("show online");
        show_online.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                show_onlineActionPerformed(evt);
            }
        });

        clear.setText("clear");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });

        messageTextBox.setColumns(20);
        messageTextBox.setRows(1);
        jScrollPane3.setViewportView(messageTextBox);

        send.setText("send");
        send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendActionPerformed(evt);
            }
        });

        userNameTxtField.setText("username");

        AdressTextField.setText("localhost");
        AdressTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdressTextFieldActionPerformed(evt);
            }
        });

        jLabel1.setText("Address");

        jLabel2.setText("Name");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(show_online, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(clear)
                        .addGap(12, 12, 12))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(connect, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(userNameTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(8, 8, 8)
                                .addComponent(jLabel1)
                                .addGap(3, 3, 3)
                                .addComponent(AdressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 342, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(100, 100, 100))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(targenUserTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 614, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(send))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(textBox, javax.swing.GroupLayout.PREFERRED_SIZE, 846, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 10, Short.MAX_VALUE)))
                .addGap(50, 50, 50))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(userNameTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AdressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(1, 1, 1))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(show_online)
                        .addComponent(clear))
                    .addComponent(connect, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(textBox, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(send)
                    .addComponent(targenUserTextField, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void connectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connectActionPerformed
        try {
            if (!_is_connected) {
                    _chatApplication = new ClientChatApplication(AdressTextField.getText(), ClientConfiguration.SERVER_PORT, this);
                    _chatApplication.Connect(userNameTxtField.getText());
                    _is_connected = true;
                    
                    connect.setText("Disconnect");
                    AdressTextField.setEnabled(false);
                    userNameTxtField.setEnabled(false);
                    textBox.append("You are now connected\r\n");
            } else {
                _chatApplication.Disconnect();
                _is_connected = false;
                
                connect.setText("Connect");
                AdressTextField.setEnabled(true);
                userNameTxtField.setEnabled(true);
                textBox.append("You are now disconnected\r\n");
            }
        } catch (IOException ex){
            textBox.append("Failed perform the operation, Error: " + ex + "\r\n");   
        } catch (InterruptedException ex) {
            textBox.append("Failed to disconnect from the server, Error: " + ex + "\r\n");   
        }
    }//GEN-LAST:event_connectActionPerformed

    private void show_onlineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_show_onlineActionPerformed
        if (!_is_connected) {
            return;
        }
        
        try {
            _chatApplication.GetOnline();
        } catch (IOException ex) {
            textBox.append("Failed to ask for online users\r\n");
        }
        
    }//GEN-LAST:event_show_onlineActionPerformed

    private void AdressTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdressTextFieldActionPerformed
        
    }//GEN-LAST:event_AdressTextFieldActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        textBox.setText("");
    }//GEN-LAST:event_clearActionPerformed

    private void sendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendActionPerformed
        if (!_is_connected) {
            return;
        }
        
        try {
            if (targenUserTextField.getText().equals("")) {
                _chatApplication.Send(messageTextBox.getText());
            } else {
                _chatApplication.SendTo(targenUserTextField.getText(), messageTextBox.getText());
            }
   
            messageTextBox.setText("");
        } catch(IOException ex) {
            textBox.append("Failed to send message \r\n");
        }
    }//GEN-LAST:event_sendActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(client_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(client_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(client_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(client_GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new client_GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AdressTextField;
    private javax.swing.JButton clear;
    private javax.swing.JButton connect;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea messageTextBox;
    private javax.swing.JButton send;
    private javax.swing.JButton show_online;
    private javax.swing.JTextField targenUserTextField;
    private java.awt.TextArea textBox;
    private javax.swing.JTextField userNameTxtField;
    // End of variables declaration//GEN-END:variables

    @Override
    public void OnIncomingMessage(String username, String message) {
        textBox.append(String.format(ClientConfiguration.INCOMING_MESSAGE_FORMAT, username, message));
    }

    @Override
    public void OnJoinedClient(String username) {
        textBox.append(String.format(ClientConfiguration.JOINED_MESSAGE_FORMAT, username));
    }

    @Override
    public void OnLeavedClient(String username) {
        textBox.append(String.format(ClientConfiguration.LEAVED_MESSAGE_FORMAT, username));
    }

    @Override
    public void OnOnlineClientList(String[] onlineUsers) {
        textBox.append(String.format(ClientConfiguration.ONLINE_MESSAGE_FORMAT, String.join(", ", onlineUsers)));
    }
}